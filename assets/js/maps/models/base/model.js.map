{"version":3,"sources":["models/base/model.coffee"],"names":[],"mappings":"AAAA,IAAA;;;AAAA,MAAA,CAAO,CACL,SADK,CAAP,EAEG,SAAC,OAAD;AAED,MAAA;SAAM;;;;;;;oBAWJ,IAAA,GAAM,SAAC,MAAD,EAAS,UAAT,EAAqB,OAArB;MACJ,OAAA,GAAU,OAAA,IAAW;MACrB,OAAO,CAAC,UAAR,GAAqB,SAAC,GAAD;eACnB,GAAG,CAAC,gBAAJ,CAAqB,eAArB,EAAuC,QAAA,GAAW,0CAAlD;MADmB;aAGrB,QAAQ,CAAC,IAAI,CAAC,IAAd,CAAmB,IAAnB,EAAyB,MAAzB,EAAiC,UAAjC,EAA6C,OAA7C;IALI;;;;KAXY,OAAO,CAAC;AAF3B,CAFH","file":"models/base/model.js","sourceRoot":"/source/","sourcesContent":["define [\n  'chaplin'\n], (Chaplin) ->\n\n  class Model extends Chaplin.Model\n    # Mixin a synchronization state machine.\n    # _.extend @prototype, Chaplin.SyncMachine\n    # initialize: ->\n    #   super\n    #   @on 'request', @beginSync\n    #   @on 'sync', @finishSync\n    #   @on 'error', @unsync\n\n    # Place your application-specific model features here.\n\n    sync: (method, collection, options) ->\n      options = options || {}\n      options.beforeSend = (xhr) ->\n        xhr.setRequestHeader('Authorization', ('Token ' + 'fccb3a073f9e7e53e01838d4693d1302e5857cf3'))\n\n      Backbone.sync.call(this, method, collection, options)\n"]}